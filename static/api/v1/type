{
   "apiVersion": "1.0.0",
   "swaggerVersion": "1.2",
   "basePath": "http://localhost/api/v1",
   "resourcePath": "/types",
   "produces": [
      "application/json"
   ],
   "apis": [
      {
         "path": "/types/",
         "operations": [
            {
               "method"     : "POST",
               "summary"    : "Creates a type.",
               "notes"      : "Create an OPENi type on the Cloudlet Platform",
               "type"       : "Status",
               "nickname"   : "createType",
               "parameters" : [
                  {
                     "name"         : "data",
                     "description"  : "The data should contain a JSON object representing an OPENi type to be created.",
                     "required"     : true,
                     "type"         : "Type",
                     "paramType"    : "body"
                  }
               ],
               "responseMessages": [
                  {
                     "code": 501,
                     "message": "Not yet Implemented"
                  },
                  {
                     "code": 400,
                     "message": "Bad Request",
                     "responseModel": "Status"
                  },
                  {
                     "code": 401,
                     "message": "Unauthorised request",
                     "responseModel": "Status"
                  },
                  {
                     "code": 405,
                     "message": "Method Not allowed",
                     "responseModel": "Status"
                  }
               ]
            },
            {
               "method"     : "GET",
               "summary"    : "Checks if types exist.",
               "notes"      : "This endpoint checks to see if a type exists within the Cloudlet Platform. If it does a status object is returned with a value of false, if it does exist the value true is returned with the Types id.",
               "nickname"   : "typesExist",
               "type"       : "Status",
               "parameters" : [
                  {
                     "name"         : "exists",
                     "description"  : "Parameter that has to be set to true",
                     "required"     : true,
                     "dataType"     : "string",
                     "paramType"    : "query",
                     "enum"         : [ true ]
                  },
                  {
                     "name"         : "rql",
                     "description"  : "RQL query???",
                     "required"     : true,
                     "type"         : "string",
                     "paramType"    : "query"
                  }
               ],
               "responseMessages": [
                  {
                     "code": 501,
                     "message": "Not yet Implemented"
                  },
                  {
                     "code": 400,
                     "message": "Bad Request",
                     "responseModel": "Status"
                  },
                  {
                     "code": 401,
                     "message": "Unauthorised request",
                     "responseModel": "Status"
                  },
                  {
                     "code": 405,
                     "message": "Method Not allowed",
                     "responseModel": "Status"
                  }
               ]
            },
            {
               "method"     : "PATCH",
               "summary"    : "Bulk add Types.",
               "notes"      : "Add multiple types to a Cloudlet Platform in one go.",
               "type"       : "BulkAddStatus",
               "nickname"   : "bulkAddType",
               "parameters" : [
                  {
                     "name"         : "body",
                     "description"  : "The body should contain a JSON object representation of a type to create.",
                     "required"     : true,
                     "type"         : "TypeArray",
                     "paramType"    : "body"
                  }
               ],
               "responseMessages": [
                  {
                     "code": 501,
                     "message": "Not yet Implemented"
                  },
                  {
                     "code": 400,
                     "message": "Bad Request",
                     "responseModel": "Status"
                  },
                  {
                     "code": 401,
                     "message": "Unauthorised request",
                     "responseModel": "Status"
                  },
                  {
                     "code": 405,
                     "message": "Method Not allowed",
                     "responseModel": "Status"
                  }
               ]
            }
         ]
      },
      {
         "path": "/types/{typeID}",
         "operations": [
            {
               "method"     : "GET",
               "summary"    : "Get a type by its id.",
               "notes"      : "Returns the type associated with the provided type.",
               "type"       : "GetByIDStatus",
               "nickname"   : "getTypeById",
               "parameters" : [
                  {
                     "name"         : "typeID",
                     "description"  : "The types Id.",
                     "required"     : true,
                     "type"         : "string",
                     "paramType"    : "path"
                  }
               ],
               "responseMessages": [
                  {
                     "code": 501,
                     "message": "Not yet Implemented"
                  },
                  {
                     "code": 400,
                     "message": "Bad Request",
                     "responseModel": "Status"
                  },
                  {
                     "code": 401,
                     "message": "Unauthorised request",
                     "responseModel": "Status"
                  },
                  {
                     "code": 405,
                     "message": "Method Not allowed",
                     "responseModel": "Status"
                  }
               ]
            },
            {
               "method"     : "GET",
               "summary"    : "Checks if types exist by id.",
               "notes"      : "This endpoint checks to see if a type exists within the Cloudlet Platform. If it does a status object is returned with a value of false, if it does exist the value true is returned with the Types id.",
               "nickname"   : "typeExistById",
               "type"      : "Status",
               "parameters" : [
                  {
                     "name"         : "typeID",
                     "description"  : "The types Id.",
                     "required"     : true,
                     "type"         : "string",
                     "paramType"    : "path"
                  },
                  {
                     "name"         : "exists",
                     "description"  : "Parameter that has to be set to true",
                     "required"     : true,
                     "dataType"     : "string",
                     "paramType"    : "query",
                     "enum"         : [ true ]
                  }
               ],
               "responseMessages": [
                  {
                     "code": 501,
                     "message": "Not yet Implemented"
                  },
                  {
                     "code": 400,
                     "message": "Bad Request",
                     "responseModel": "Status"
                  },
                  {
                     "code": 401,
                     "message": "Unauthorised request",
                     "responseModel": "Status"
                  },
                  {
                     "code": 405,
                     "message": "Method Not allowed",
                     "responseModel": "Status"
                  }
               ]
            }
         ]
      }
   ],
   "models": {
      "TypeArray": {
         "id": "TypeArray",
         "properties": {
            "types": {
               "type"        : "array",
               "description" : "An array of Types",
               "items"       : {
                  "$ref" : "Type"
               }
            }
         }
      },
      "Type": {
         "id": "Type",
         "properties": {
            "@id": {
               "type"        : "string",
               "description" : "Unique identifier for the type",
               "required"    : true
            },
            "@context": {
               "type"        : "string",
               "description" : "A link to the type's context",
               "required"    : true
            },
            "schema": {
               "type"        : "string",
               "description" : "The defined schema format for this type",
               "required"    : true
            }
         }
      },
      "Status": {
         "id": "Status",
         "properties": {
            "value": {
               "type"        : "boolean",
               "format"      : "boolean",
               "description" : "True if request was success, otherwise False.",
               "required"    : true
            },
            "typeId":{
               "type"        : "string",
               "description" : "The id of the Type.",
               "required"    : false
            }
         }
      },
      "BulkAddStatus": {
         "id": "BulkAddStatus",
         "properties": {
            "value": {
               "type"        : "boolean",
               "format"      : "boolean",
               "description" : "True if request was success, otherwise False.",
               "required"    : true
            },
            "typeIds":{
               "type"        : "array",
               "format"      : "string",
               "description" : "An array of ids for the created types.",
               "items"       : {
                  "$ref" : "string"
               },
               "required"    : true
            }
         }
      },
      "GetByIDStatus": {
         "id": "GetByIDStatus",
         "properties": {
            "value": {
               "type"        : "boolean",
               "format"      : "boolean",
               "description" : "True if request was success, otherwise False.",
               "required"    : true
            },
            "typeId":{
               "type"     : "Type",
               "description" : "The Type associated with the id.",
               "required" : false
            }
         }
      }
   }
}
